services:
  db:
    image: postgres:alpine3.18
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hcflinks
    ports:
      - 9988:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  # db:
  #   image: redis:alpine3.18
  #   restart: always
  #   ports:
  #     - '9988:6379'
  #   command: redis-server --save 20 1 --loglevel warning --requirepass password
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  #     interval: 1s
  #     timeout: 3s
  #     retries: 5
  links-server:
    build: server/
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - LINKS_BACKEND=postgres
      - LINKS_PORT=8080
      - LINKS_DB_HOST=host.docker.internal
      - LINKS_DB_USER=postgres
      - LINKS_DB_PASSWORD=password
      - LINKS_DB_DATABASE=hcflinks
      - LINKS_DB_PORT=9988
    depends_on:
      db:
        condition: service_healthy
    links:
      - "db"
  links-frontend:
    build: frontend/
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      db:
        condition: service_healthy
    links:
      - "db"